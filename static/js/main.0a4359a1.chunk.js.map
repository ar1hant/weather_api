{"version":3,"sources":["components/form.jsx","actions/index.js","components/weather.jsx","components/theme.jsx","App.jsx","reducers/place_reducer.js","reducers/place_data_reducer.js","reducers/theme_reducer.js","reducers/index.js","store.jsx","index.js"],"names":["Form","place","useSelector","state","theme","dispatch","useDispatch","className","type","value","placeholder","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","console","log","updatePlaceData","Weather","placeData","location","name","country","src","current","condition","icon","alt","temp_c","text","forecast","forecastday","day","maxtemp_c","Theme","App","placeReducer","action","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a4359a1.chunk.js","sourcesContent":["import {useSelector, useDispatch} from \"react-redux\";\r\nimport {updatePlace, updatePlaceData} from \"../actions\";\r\n\r\nconst Form = () => {\r\n  const place = useSelector(state => state.place);\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 form\">\r\n            <input type=\"text\" value={place} placeholder=\"City Name\" \r\n            onChange={(e) => { dispatch(updatePlace(e.target.value));}}\r\n            />\r\n            <button className={theme ? \"btn box dark\" : \"btn box\"}\r\n            onClick={() => {dispatch(updatePlaceData(place))}}\r\n            >\r\n            Go</button>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Form;","const updatePlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_PLACE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n  return (dispatch) => {\r\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=7574597f23ff40de85d132005210308&q=${place}&days=3`)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch({\r\n        type: \"UPDATE_PLACE_DATA\",\r\n        payload: data,\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nconst toggleTheme = () => {\r\n  return{\r\n    type: \"TOGGLE_THEME\",\r\n  };\r\n};\r\n\r\nexport {updatePlace, updatePlaceData, toggleTheme};","import {useSelector} from \"react-redux\";\r\n\r\nconst Weather = () => {\r\n  const placeData = useSelector(state => state.placeData);\r\n  const theme = useSelector((state) => state.theme);\r\n  return (\r\n    <div className=\"col-12 weather\">\r\n      <div className={theme ? \"card dark\" : \"card\"}>\r\n        {\r\n          placeData.location ?\r\n          <div className=\"container\"> \r\n            <div className=\"row\">\r\n              <div className=\"col-4 name_styling_l\">\r\n                <div>{placeData.location.name}</div>\r\n                <div>{placeData.location.country}</div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <img src={placeData.current.condition.icon} alt=\"cloud\" />\r\n              </div>\r\n              <div className=\"col-4 name_styling_r\">\r\n                <div>{placeData.current.temp_c}&deg;</div>\r\n                <div>{placeData.current.condition.text}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-4 name_styling_bottom\">\r\n                <div>TODAY</div>\r\n                <img src={placeData.forecast.forecastday[0].day.condition.icon} alt=\"cloud\" />\r\n                <div className=\"max_temp\">{placeData.forecast.forecastday[0].day.maxtemp_c}</div>\r\n                <div className=\"min_temp\">{placeData.forecast.forecastday[0].day.maxtemp_c}</div>\r\n              </div>\r\n              <div className=\"col-4 name_styling_bottom\">\r\n                <div>TOMMOROW</div>\r\n                <img src={placeData.forecast.forecastday[1].day.condition.icon} alt=\"cloud\" />\r\n                <div className=\"max_temp\">{placeData.forecast.forecastday[1].day.maxtemp_c}</div>\r\n                <div className=\"min_temp\">{placeData.forecast.forecastday[1].day.maxtemp_c}</div>\r\n              </div>\r\n              <div className=\"col-4 name_styling_bottom\">\r\n                <div>DAY AFTER TOM.</div>\r\n                <img src={placeData.forecast.forecastday[2].day.condition.icon} alt=\"cloud\" />\r\n                <div className=\"max_temp\">{placeData.forecast.forecastday[2].day.maxtemp_c}</div>\r\n                <div className=\"min_temp\">{placeData.forecast.forecastday[2].day.maxtemp_c}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : <h2>No Place Found</h2>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleTheme } from \"../actions\";\r\n\r\nconst Theme = () =>{\r\n  const theme = useSelector(state => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"toggle_theme\">\r\n    <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"} onClick={() => dispatch(toggleTheme())}>\r\n      {\r\n        theme ? \"dark\" : \"light\"\r\n      }\r\n    </button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Theme;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\";\r\n\r\nimport Theme from \"./components/theme\";\r\n// import {useState} from 'react';\r\n// import {useEffect} from 'react';\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction App(){\r\n  const theme = useSelector((state) => state.theme);\r\n  // console.log(theme);\r\n  return(\r\n    <div className={theme ? \"App dark\" : \"App\"}>\r\n      <Theme />\r\n      <Form />\r\n      <Weather />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const placeReducer = (state = \"\", action) => {\r\n  if(action.type === \"UPDATE_PLACE\")\r\n    return action.payload;\r\n  return state;\r\n}\r\n\r\nexport default placeReducer;","const placeDataReducer = (state = \"\", action) => {\r\n  if(action.type === \"UPDATE_PLACE_DATA\")\r\n    return action.payload;\r\n  return state;\r\n};\r\n\r\nexport default placeDataReducer;","const themeReducer = (state = false,action) => {\r\n  if(action.type === \"TOGGLE_THEME\")\r\n    return !state;\r\n  return state;\r\n}\r\n\r\nexport default themeReducer;","import {combineReducers} from \"redux\";\r\nimport placeReducer from \"./place_reducer\";\r\nimport placeDataReducer from \"./place_data_reducer\";\r\nimport themeReducer from \"./theme_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  place: placeReducer,\r\n  placeData: placeDataReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}